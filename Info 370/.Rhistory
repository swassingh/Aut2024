SE_states <- sqrt(((0.08*0.92) / 11545) + ((0.088*0.912) / 4691))
# p_h_1 - p_h_2
(0.08 - 0.088) / SE_states
qnorm(1-0.05/2)
SE_states <- sqrt(((0.08*0.92) / 11545) + ((0.088*0.912) / 4691))
# p_h_1 - p_h_2
z_calc <- (0.08 - 0.088) / SE_states
z_crit <- qnorm(1-0.05/2)
z_calc > z_crit
s_or_f_check_1 <- (0.08*11545 + 0.088*4691) / (11545 + 4691)
s_or_f_check_1
SE_states <- sqrt(((0.08*0.92) / 11545) + ((0.088*0.912) / 4691))
# p_h_1 - p_h_2
z_calc <- (0.08 - 0.088) / SE_states
z_calc
z_crit <- qnorm(1-0.05/2)
z_calc > z_crit
SE_states <- sqrt(((0.08*0.92) / 11545) + ((0.088*0.912) / 4691))
# p_h_1 - p_h_2
z_calc <- (0.08 - 0.088) / SE_states
z_calc
z_crit <- qnorm(1-0.05)
z_calc > z_crit
SE_states <- sqrt(((0.08*0.92) / 11545) + ((0.088*0.912) / 4691))
# p_h_1 - p_h_2
z_calc <- (0.08 - 0.088) / SE_states
z_calc
z_crit <- qnorm(1-0.05/2)
z_crit
z_calc > z_crit
SE_states <- sqrt(((0.08*0.92) / 11545) + ((0.088*0.912) / 4691))
# p_h_1 - p_h_2
z_calc <- (0.08 - 0.088) / SE_states
z_calc
z_crit <- qnorm(1-0.05)
z_crit
z_calc > z_crit
SE_states <- sqrt(((0.08*0.92) / 11545) + ((0.088*0.912) / 4691))
# p_h_1 - p_h_2
z_calc <- (0.08 - 0.088) / SE_states
z_calc
z_crit <- -1 * qnorm(1-0.05/2)
z_crit
z_calc > z_crit
SE_states <- sqrt(((0.08*0.92) / 11545) + ((0.088*0.912) / 4691))
# p_h_1 - p_h_2
z_calc <- (0.08 - 0.088) / SE_states
z_calc
z_crit <- math.abs(-1 * qnorm(1-0.05/2))
SE_states <- sqrt(((0.08*0.92) / 11545) + ((0.088*0.912) / 4691))
# p_h_1 - p_h_2
z_calc <- (0.08 - 0.088) / SE_states
z_calc
z_crit <- abs(-1 * qnorm(1-0.05/2))
z_crit
z_calc > z_crit
SE_states <- sqrt(((0.08*0.92) / 11545) + ((0.088*0.912) / 4691))
# p_h_1 - p_h_2
z_calc <- abs((0.08 - 0.088) / SE_states)
z_calc
z_crit <- abs(-1 * qnorm(1-0.05/2))
z_crit
z_calc > z_crit
SE_states <- sqrt(((0.08*0.92) / 11545) + ((0.088*0.912) / 4691))
# p_h_1 - p_h_2
z_calc <- (0.08 - 0.088) / SE_states
z_calc
z_crit <- qnorm(1-0.05/2)
z_crit
z_calc > z_crit
SE_states <- sqrt(((0.08*0.92) / 11545) + ((0.088*0.912) / 4691))
# p_h_1 - p_h_2
z_calc <- abs((0.08 - 0.088) / SE_states)
z_calc
z_crit <- abs(-1 * qnorm(1-0.05/2))
z_crit
z_calc > z_crit
SE_states <- sqrt(((0.08*0.92) / 11545) + ((0.088*0.912) / 4691))
# p_h_1 - p_h_2
z_calc <- abs((0.08 - 0.088) / SE_states)
z_calc
z_crit <- abs(-1 * qnorm(1-0.05))
z_crit
z_calc > z_crit
SE_states <- sqrt(((0.08*0.92) / 11545) + ((0.088*0.912) / 4691))
# p_h_1 - p_h_2
z_calc <- abs((0.08 - 0.088) / SE_states)
z_calc
z_crit <- abs(-1 * qnorm(1-0.05/2))
z_crit
z_calc > z_crit
s_or_f_check_2 <- (35 + 35) / (292 + 203)
s_or_f_check_2 <- (35 + 35) / (292 + 203)
s_or_f_check_2
prop_cont <- 35 / 292
prop_truck <- 35 / 203
SE_drivers <- sqrt((prop_cont * (1 - prop_cont)) / 292 + (prop_truck * (1 - prop_truck)) / 203)
z_calc <- (prop_cont - prop_truck) / SE_drivers
z_calc
z_crit
prop_cont <- 35 / 292
prop_truck <- 35 / 203
SE_drivers <- sqrt((prop_cont * (1 - prop_cont)) / 292 + (prop_truck * (1 - prop_truck)) / 203)
z_calc <- abs((prop_cont - prop_truck) / SE_drivers)
z_calc
z_crit
prop_cont <- 35 / 292
prop_truck <- 35 / 203
SE_drivers <- sqrt((prop_cont * (1 - prop_cont)) / 292 + (prop_truck * (1 - prop_truck)) / 203)
z_calc <- abs((prop_truck - prop_cont) / SE_drivers)
z_calc
z_crit
prop_cont <- 35 / 292
prop_truck <- 35 / 203
SE_drivers <- sqrt((prop_cont * (1 - prop_cont)) / 292 + (prop_truck * (1 - prop_truck)) / 203)
testing <- sqrt((s_or_f_check_2 * (1 - s_or_f_check_2)) * (1/292 + 1/203))
z_calc <- abs((prop_truck - prop_cont) / SE_drivers)
abs((prop_truck - prop_cont) / testing)
z_calc
z_crit
prop_cont <- 35 / 292
prop_truck <- 35 / 203
SE_drivers <- sqrt((s_or_f_check_2 * (1 - s_or_f_check_2)) * (1/292 + 1/203))
z_calc <- abs((prop_truck - prop_cont) / SE_drivers)
z_calc
z_crit
SE_states <- sqrt(((0.08*0.92) / 11545) + ((0.088*0.912) / 4691))
# p_h_1 - p_h_2
z_calc <- abs((0.08 - 0.088) / SE_states)
z_calc
z_crit <- abs(-1 * qnorm(1-0.05/2))
z_crit
z_calc > z_crit
SE_states <- sqrt(((0.08*0.92) / 11545) + ((0.088*0.912) / 4691))
# p_h_1 - p_h_2
z_calc <- abs((0.08 - 0.088) / SE_states)
testing <- sqrt((s_or_f_check_1 * (1 - s_or_f_check_1)) * (1/11545 + 1/4691))
abs((0.08 - 0.088) / testing)
z_calc
z_crit <- abs(-1 * qnorm(1-0.05/2))
z_crit
z_calc > z_crit
SE_states <- sqrt((s_or_f_check_1 * (1 - s_or_f_check_1)) * (1/11545 + 1/4691))
# p_h_1 - p_h_2
z_calc <- abs((0.08 - 0.088) / SE_states)
z_calc
z_crit <- abs(-1 * qnorm(1-0.05/2))
z_crit
z_calc > z_crit
prop_cont <- 35 / 292
prop_truck <- 35 / 203
SE_drivers <- sqrt((s_or_f_check_2 * (1 - s_or_f_check_2)) * (1/292 + 1/203))
z_calc_drivers <- abs((prop_truck - prop_cont) / SE_drivers)
z_calc_drivers
z_crit
z_calc_drivers > z_crit
s_or_f_check_3 <- (143 + 111) / (302 + 181)
s_or_f_check_3
prop_vitamin_autism <- 143 / 302
prop_novitamin_autism <- 111 / 181
SE_total_autism <- sqrt((s_or_f_check_3 * (1 - s_or_f_check_3)) * (1/292 + 1/203))
z_calc_total_autism <- abs((prop_vitamin_autism - prop_novitamin_autism) / SE_total)
prop_vitamin_autism <- 143 / 302
prop_novitamin_autism <- 111 / 181
SE_total_autism <- sqrt((s_or_f_check_3 * (1 - s_or_f_check_3)) * (1/292 + 1/203))
z_calc_total_autism <- abs((prop_vitamin_autism - prop_novitamin_autism) / SE_total_autism)
z_calc_total_autism
z_crit # assumes alpha = 5
z_calc_total_autism > z_crit
prop_vitamin_autism <- 143 / 302
prop_novitamin_autism <- 111 / 181
SE_total_autism <- sqrt((s_or_f_check_3 * (1 - s_or_f_check_3)) * (1/302 + 1/181))
z_calc_total_autism <- abs((prop_vitamin_autism - prop_novitamin_autism) / SE_total_autism)
z_calc_total_autism
z_crit # assumes alpha = 5
z_calc_total_autism > z_crit
study_results <- data.frame(
Treatment = rep(c("Nevaripine", "Lopinavir"), each = 120),
Virologic_Failure = c(rep("Yes", 26), rep("No", 94), rep("Yes", 10), rep("No", 110))
)
two_way_table <- table(study_results$Virologic_Failure, study_results$Treatment)
two_way_table
study_results <- data.frame(
Treatment = rep(c("Nevaripine", "Lopinavir"), each = 120),
Virologic_Failure = c(rep("Yes", 26), rep("No", 94), rep("Yes", 10), rep("No", 110))
)
two_way_table <- table(study_results$Virologic_Failure, study_results$Treatment)
two_way_table_with_totals <- addmargins(two_way_table, FUN = list(Total = sum), quiet = TRUE)
two_way_table
study_results <- data.frame(
Treatment = rep(c("Nevaripine", "Lopinavir"), each = 120),
Virologic_Failure = c(rep("Yes", 26), rep("No", 94), rep("Yes", 10), rep("No", 110))
)
two_way_table <- table(study_results$Virologic_Failure, study_results$Treatment)
two_way_table <- addmargins(two_way_table, FUN = list(Total = sum), quiet = TRUE)
two_way_table
study_results <- data.frame(
Treatment = rep(c("No", "Yes"), each = 120),
Virologic_Failure = c(rep("Nevaripine", 26), rep("Nevaripine", 94), rep("Lopinavir", 10), rep("Lopinavir", 110))
)
two_way_table <- table(study_results$Virologic_Failure, study_results$Treatment)
two_way_table <- addmargins(two_way_table, FUN = list(Total = sum), quiet = TRUE)
two_way_table
study_results <- data.frame(
Treatment = rep(c("Nevaripine", "Lopinavir"), each = 120),
Virologic_Failure = c(rep("Yes", 26), rep("No", 94), rep("Lopinavir", 10), rep("Lopinavir", 110))
)
two_way_table <- table(study_results$Virologic_Failure, study_results$Treatment)
two_way_table <- addmargins(two_way_table, FUN = list(Total = sum), quiet = TRUE)
two_way_table
study_results <- data.frame(
Treatment = rep(c("Nevaripine", "Lopinavir"), each = 120),
Virologic_Failure = c(rep("Yes", 26), rep("No", 94), rep("Lopinavir", 10), rep("No", 110))
)
two_way_table <- table(study_results$Virologic_Failure, study_results$Treatment)
two_way_table <- addmargins(two_way_table, FUN = list(Total = sum), quiet = TRUE)
two_way_table
study_results <- data.frame(
Treatment = rep(c("Nevaripine", "Lopinavir"), each = 120),
Virologic_Failure = c(rep("Yes", 26), rep("No", 94), rep("Yes", 10), rep("No", 110))
)
two_way_table <- table(study_results$Virologic_Failure, study_results$Treatment)
two_way_table <- addmargins(two_way_table, FUN = list(Total = sum), quiet = TRUE)
two_way_table
s_or_f_check_4 <- (26 + 10) / (120 + 120)
s_or_f_check_4
p_hat_N <- 26 / 120
p_hat_L <- 10 / 120
SE_total_HIV <- sqrt((s_or_f_check_4 * (1 - s_or_f_check_4)) * (1/120 + 1/120))
z_calc_HIV <-  abs((p_hat_N - p_hat_L) / SE_total_HIV)
z_crit
p_hat_N <- 26 / 120
p_hat_L <- 10 / 120
SE_total_HIV <- sqrt((s_or_f_check_4 * (1 - s_or_f_check_4)) * (1/120 + 1/120))
z_calc_HIV <-  abs((p_hat_N - p_hat_L) / SE_total_HIV)
z_calc_HIV
z_crit
p_hat_N <- 26 / 120
p_hat_L <- 10 / 120
SE_total_HIV <- sqrt((s_or_f_check_4 * (1 - s_or_f_check_4)) * (1/120 + 1/120))
z_calc_HIV <-  abs((p_hat_N - p_hat_L) / SE_total_HIV)
z_calc_HIV
z_crit # assuming alpha is 0.05
z_calc_HIV > z_crit
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
## Include the command to load the data here!!!!
177.8 - 163.8
(180 - 171.1) / 9.4
(155 - 171.1) / 9.4
9.4 / sqrt(507)
9.4 / sqrt(507)
(1.645 * 250 / 25)**2
(1.645 * 250 / 25)
(1.645 * 250 / 25)**2
(1.645 * 250 / 25)**2
(2.576 * 250 /25)**2
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
ml <- 218.75
mh <- 160.20
sdl <- 52.24
sdh <- 38.63
nl <- 12
nh <- 10
(ml-mh) + qt(0.025, 9)*sqrt(sdl^2/nl+sdh^2/nh)
(ml-mh) - qt(0.025, 9)*sqrt(sdl^2/nl+sdh^2/nh)
Lower <- (218.75 - 160.20) - qt(0.025, 9)*sqrt((52.24**2 / 12) + (38.63**2 / 10))
Lower <- (218.75 - 160.20) - qt(0.025, 9)*sqrt((52.24**2 / 12) + (38.63**2 / 10))
Upper <- (218.75 - 160.20) + qt(0.025, 9)*sqrt((52.24**2 / 12) + (38.63**2 / 10))
Lower
Upper
Upper <- (218.75 - 160.20) / sqrt((52.24**2 / 12) + (38.63**2 / 10))
qt(0.025, 9)
Upper
Upper <- (218.75 - 160.20) / sqrt((52.24**2 / 12) + (38.63**2 / 10))
Upper
abs(Upper) > qt(0.025, 9)
Upper <- (218.75 - 160.20) / sqrt((52.24**2 / 12) + (38.63**2 / 10))
Upper
abs(Upper) > qt(0.05, 9)
abs(Zcalc_beans) > qt(0.01, 9)
Zcalc_beans <- (218.75 - 160.20) / sqrt((52.24**2 / 12) + (38.63**2 / 10))
Zcalc_beans
abs(Zcalc_beans) > qt(0.05, 9)
abs(Zcalc_beans) > qt(0.01, 9)
abs(Zcalc_beans) > qt(0.005, 9)
Zcalc_beans <- (218.75 - 160.20) / sqrt((52.24**2 / 12) + (38.63**2 / 10))
Zcalc_beans
abs(Zcalc_beans) > qt(0.025, 9)
Zcalc_beans <- (218.75 - 160.20) / sqrt((52.24**2 / 12) + (38.63**2 / 10))
Zcalc_beans
qt(0.05, 9)
abs(Zcalc_beans) > qt(0.025, 9)
Zcalc_beans <- (218.75 - 160.20) / sqrt((52.24**2 / 12) + (38.63**2 / 10))
Zcalc_beans
abs(Zcalc_beans) > abs(qt(0.025, 9))
Zcalc_beans <- (218.75 - 160.20) / sqrt((52.24**2 / 12) + (38.63**2 / 10))
Zcalc_beans
abs(Zcalc_beans) > abs(qt(0.05, 9))
abs(Zcalc_beans) > abs(qt(0.005, 9))
Zcalc_cars <- (19.85 - 16.12) / sqrt((4.51**2 / 26) + (3.58**2 / 26))
abs(Zcalc_beans) > abs(qt(0.05, 25))
Zcalc_cars <- (19.85 - 16.12) / sqrt((4.51**2 / 26) + (3.58**2 / 26))
Zcalc_cars
abs(Zcalc_cars) > abs(qt(0.05, 25))
(27.88 - 22.92) + qt(0.01, 25)*sqrt(5.01**2 / 26 + 5.29**2 / 26)
Upper <- (27.88 - 22.92) + qt(0.01, 25)*sqrt(5.01**2 / 26 + 5.29**2 / 26)
Lower <- (27.88 - 22.92) - qt(0.01, 25)*sqrt(5.01**2 / 26 + 5.29**2 / 26)
Upper
Lower
Lower_disease <- (810 - 708) + qt(0.05, 25) * sqrt(117**2 / 28 + 72**2 / 26)
Upper_disease <- (810 - 708) - qt(0.05, 25) * sqrt(117**2 / 28 + 72**2 / 26)
Lower_disease <- (810 - 708) + qt(0.05, 25) * sqrt(117**2 / 28 + 72**2 / 26)
Upper_disease <- (810 - 708) - qt(0.05, 25) * sqrt(117**2 / 28 + 72**2 / 26)
Lower_disease
Upper_disease
elder_upper <- 810 - qt(0.05, 27) * 117 / sqrt(28)
elder_lower <- 810 + qt(0.05, 27) * 117 / sqrt(28)
elder_lower
elder_upper
Zcalc_disease <- (810 - 708) / sqrt(117**2 / 28 + 72**2 / 26)
Zcalc_disease > abs(qt(0.10, 25))
Zcalc_disease <- (810 - 708) / sqrt(117**2 / 28 + 72**2 / 26)
Zcalc_disease
Zcalc_disease > abs(qt(0.10, 25))
Zcalc_disease <- (810 - 708) / sqrt(117**2 / 28 + 72**2 / 26)
Zcalc_disease
abs(Zcalc_disease) > abs(qt(0.10, 25))
install.packages("nycflights13")
# Load standard libraries
library(tidyverse)
library('nycflights13')
# Load the nycflights13 library which includes data on all
# flights departing NYC
data(flights)
# Note the data itself is called flights, we will make it into a local df
# for readability in a table type of format
flights <- tibble::as_tibble(flights)
# Look at the help file for information about the data
# ?flights
flights
summary(flights)
airlines_data <- airlines
airports_data <- airports
planes_data <- planes
weather_data <- weather
flights_data <- flights
unique(flights_data$carrier)
length(unique(flights_data$carrier))
#Finding missing values in different variables
sum(is.na(flights_data$carrier))
#Write your response for all variables similarly
unique(flights_data$Airlines_data)
length(unique(flights_data$Airlines_data))
sum(is.na(flights_data$Airlines_data))
# Load standard libraries
library(tidyverse)
library('nycflights13')
view("nycflights13")
view('nycflights13')
view(nycflights13)
library('nycflights13')
view("nycflights13")
view(flights)
# Load the nycflights13 library which includes data on all
# flights departing NYC
data(flights)
# Note the data itself is called flights, we will make it into a local df
# for readability in a table type of format
flights <- tibble::as_tibble(flights)
# Look at the help file for information about the data
# ?flights
flights
summary(flights)
unique(flights_data$carrier)
unique(flights_data$carrier)
# Load the nycflights13 library which includes data on all
# flights departing NYC
data(flights)
# Note the data itself is called flights, we will make it into a local df
# for readability in a table type of format
flights <- tibble::as_tibble(flights)
# Look at the help file for information about the data
# ?flights
flights
summary(flights)
airlines_data <- airlines
airports_data <- airports
planes_data <- planes
weather_data <- weather
flights_data <- flights
unique(flights_data$carrier)
length(unique(flights_data$carrier))
#Finding missing values in different variables
sum(is.na(flights_data$carrier))
#Write your response for all variables similarly
unique(flights_data$Airlines_data)
length(unique(flights_data$Airlines_data))
sum(is.na(flights_data$Airlines_data))
unique(flights_data$Year)
length(unique(flights_data$Year))
sum(is.na(flights_data$Year))
unique(flights_data$year)
length(unique(flights_data$year))
sum(is.na(flights_data$year))
unique(flights_data$month)
length(unique(flights_data$month))
sum(is.na(flights_data$month))
unique(flights_data$day)
length(unique(flights_data$day))
sum(is.na(flights_data$day))
unique(flights_data$dep_time)
length(unique(flights_data$dep_time))
sum(is.na(flights_data$dep_time))
unique(flights_data$arr_time)
length(unique(flights_data$arr_time))
sum(is.na(flights_data$arr_time))
unique(flights_data$sched_dep_time)
length(unique(flights_data$sched_dep_time))
sum(is.na(flights_data$sched_dep_time))
unique(flights_data$sched_arr_time)
length(unique(flights_data$sched_arr_time))
sum(is.na(flights_data$sched_arr_time))
unique(flights_data$dep_delay)
length(unique(flights_data$dep_delay))
sum(is.na(flights_data$dep_delay))
unique(flights_data$arr_delay)
length(unique(flights_data$arr_delay))
sum(is.na(flights_data$arr_delay))
unique(flights_data$carrier)
length(unique(flights_data$carrier))
sum(is.na(flights_data$carrier))
unique(flights_data$flight)
length(unique(flights_data$flight))
sum(is.na(flights_data$flight))
unique(flights_data$tailnum)
length(unique(flights_data$tailnum))
sum(is.na(flights_data$tailnum))
unique(flights_data$origin)
length(unique(flights_data$origin))
sum(is.na(flights_data$origin))
unique(flights_data$dest)
length(unique(flights_data$dest))
sum(is.na(flights_data$dest))
unique(flights_data$air_time)
length(unique(flights_data$air_time))
sum(is.na(flights_data$air_time))
unique(flights_data$distance)
length(unique(flights_data$distance))
sum(is.na(flights_data$distance))
unique(flights_data$hour)
length(unique(flights_data$hour))
sum(is.na(flights_data$hour))
unique(flights_data$minute)
length(unique(flights_data$minute))
sum(is.na(flights_data$minute))
unique(flights_data$time_hour)
length(unique(flights_data$time_hour))
sum(is.na(flights_data$time_hour))
#Finding total count of flights flying out of all three airports on daily basis
#Number of flights flying out of JFK airport in a day
JFK_total <- group_by(flights_data[flights_data$origin == "JFK",],day)
( sum_JFK_total <- summarize(JFK_total,count=n()) )
colnames(sum_JFK_total) <- c("day", "TotalCount")
#Number of flights flying out of EWR airport in a day
EWR_total <- group_by(flights_data[flights_data$origin == "EWR",],day)
( sum_EWR_total <- summarize(EWR_total,count=n()) )
colnames(sum_EWR_total) <- c("day", "TotalCount")
#Number of flights flying out of LGA airport in a day
LGA_total <- group_by(flights_data[flights_data$origin == "LGA",],day)
( sum_LGA_total <- summarize(LGA_total,count=n()) )
colnames(sum_LGA_total) <- c("day", "TotalCount")
# Load standard libraries
library(tidyverse)
library('nycflights13')
# Load the nycflights13 library which includes data on all
# flights departing NYC
data(flights)
# Note the data itself is called flights, we will make it into a local df
# for readability in a table type of format
flights <- tibble::as_tibble(flights)
# Look at the help file for information about the data
# ?flights
flights
summary(flights)
airlines_data <- airlines
airports_data <- airports
planes_data <- planes
weather_data <- weather
flights_data <- flights
unique(flights_data$carrier)
length(unique(flights_data$carrier))
#Finding missing values in different variables
sum(is.na(flights_data$carrier))
#Write your response for all variables similarly
unique(flights_data$time_hour)
length(unique(flights_data$time_hour))
sum(is.na(flights_data$time_hour))
#Finding total count of flights flying out of all three airports on daily basis
#Number of flights flying out of JFK airport in a day
JFK_total <- group_by(flights_data[flights_data$origin == "JFK",],day)
( sum_JFK_total <- summarize(JFK_total,count=n()) )
colnames(sum_JFK_total) <- c("day", "TotalCount")
#Number of flights flying out of EWR airport in a day
EWR_total <- group_by(flights_data[flights_data$origin == "EWR",],day)
( sum_EWR_total <- summarize(EWR_total,count=n()) )
colnames(sum_EWR_total) <- c("day", "TotalCount")
#Number of flights flying out of LGA airport in a day
LGA_total <- group_by(flights_data[flights_data$origin == "LGA",],day)
( sum_LGA_total <- summarize(LGA_total,count=n()) )
colnames(sum_LGA_total) <- c("day", "TotalCount")
